from crewai import Agent, Task, Crew
from langchain_community.tools import DuckDuckGoSearchRun
from textwrap import dedent
import streamlit as st
from langchain_groq import ChatGroq
from crewai_tools import (
    tool,
    WebsiteSearchTool
)

MODEL = "llama3-8b-8192"

API_KEY = st.secrets["GROQ_API_KEY"]
if not API_KEY:
    API_KEY = st.text_input("API KEY GROQ", "N√£o tem conta GROQ?")
    st.write("Crie sua conta GROQ", API_KEY)
    st.page_link("https://console.groq.com/keys", label="Crie sua conta GROQ", icon="üåé")

    st.error("Please set the GROQ_API_KEY environment variable.")
    exit(1)

llm = ChatGroq(
        temperature=0.1, 
        groq_api_key = st.secrets["GROQ_API_KEY"], 
        model_name=MODEL
)

# Ferramenta de busca no DuckDuckGo e API de buscas
@tool('DuckDuckGoSearch')
def search(search_query: str):
    """Search the web for information on a given topic. 
    The search_query argument of your query must be in string format"""
    return DuckDuckGoSearchRun().run(str(search_query))

# Para fazer rag coletando dados da p√°gina
web_rag_tool = WebsiteSearchTool()

# Defini√ß√£o dos agentes
preco_historico_agente = Agent(
    role='Analista de Hist√≥rico de Pre√ßos',
    goal='Analisar o comportamento passado do ativo.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um analista especializado em identificar padr√µes e tend√™ncias em hist√≥ricos de pre√ßos.",
    llm=llm,
    tools=[search]
)

volume_negociacao_agente = Agent(
    role='Analista de Volume de Negocia√ß√£o',
    goal='Analisar o volume de compras e vendas do ativo.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um analista especializado em interpretar volumes de negocia√ß√£o para determinar a for√ßa das tend√™ncias.",
    llm=llm,
    tools=[search]
)

indicadores_tecnicos_agente = Agent(
    role='Analista de Indicadores T√©cnicos',
    goal='Utilizar indicadores t√©cnicos para prever movimentos de pre√ßos.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um especialista em indicadores t√©cnicos como RSI, MACD, e bandas de Bollinger.",
    llm=llm,
    tools=[search]
)

sentimento_mercado_agente = Agent(
    role='Analista de Sentimento de Mercado',
    goal='Analisar o sentimento do mercado com base em not√≠cias e m√≠dias sociais.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um especialista em captar e interpretar o sentimento do mercado.",
    llm=llm,
    tools=[search]
)

noticias_eventos_agente = Agent(
    role='Analista de Not√≠cias e Eventos',
    goal='Avaliar o impacto de not√≠cias e eventos recentes no pre√ßo do cripto ativo.',
    verbose=True,
    memory=False,
    backstory="Voc√™ monitora e analisa eventos e not√≠cias no mercado de criptomoedas que impactam nos pre√ßos dos ativos.",
    llm=llm,
    tools=[search]
)

indicadores_mercado_agente = Agent(
    role='Analista de Indicadores de Mercado',
    goal='Analisar √≠ndices de mercado como VIX e S&P 500 para prever tend√™ncias.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um especialista em interpretar √≠ndices de mercado.",
    llm=llm,
    tools=[search] 
)

correlacionamento_agente = Agent(
    role='Analista de Correlacionamento',
    goal='Analisar a correla√ß√£o entre diferentes ativos para prever movimentos de pre√ßos.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um especialista em an√°lise de correla√ß√£o entre diferentes ativos.",
    llm=llm,
    tools=[search] 
)

analise_fundamentalista_agente = Agent(
    role='Analista Fundamentalista',
    goal='Avaliar o valor intr√≠nseco do ativo para prever se est√° subvalorizado ou sobrevalorizado.',
    verbose=True,
    memory=False,
    backstory="Voc√™ √© um especialista em an√°lise fundamentalista, focado em avaliar o valor intr√≠nseco de ativos.",
    llm=llm,
    tools=[search] 
)
